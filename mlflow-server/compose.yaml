version: "3.9"

services:
  postgres:
    image: postgres:16-alpine
    container_name: mlflow_postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 20
    volumes:
      - pg_data:/var/lib/postgresql/data
    networks: [mlnet]

  minio:
    image: minio/minio:RELEASE.2024-09-22T00-00-00Z
    container_name: mlflow_minio
    command: server /data --console-address ":${MINIO_CONSOLE_PORT}" --address ":${MINIO_API_PORT}"
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD}
    ports:
      - "9000:9000"    # API S3
      - "9001:9001"    # Console
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
    volumes:
      - minio_data:/data
    networks: [mlnet]

  minio-mc:
    image: minio/mc:RELEASE.2024-09-20T00-00-00Z
    container_name: mlflow_minio_mc
    depends_on:
      - minio
    entrypoint: >
      /bin/sh -c "
      mc alias set local http://minio:${MINIO_API_PORT} ${MINIO_ROOT_USER} ${MINIO_ROOT_PASSWORD} &&
      mc mb -p local/${MINIO_BUCKET} || true &&
      mc anonymous set none local/${MINIO_BUCKET} || true &&
      tail -f /dev/null
      "
    networks: [mlnet]

  mlflow:
    image: ghcr.io/mlflow/mlflow:${MLFLOW_VERSION}
    container_name: mlflow_server
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_started
      minio-mc:
        condition: service_started
    environment:
      MLFLOW_TRACKING_URI: http://0.0.0.0:${MLFLOW_PORT}
      MLFLOW_S3_ENDPOINT_URL: ${ARTIFACT_S3_ENDPOINT}
      AWS_ACCESS_KEY_ID: ${MINIO_ROOT_USER}
      AWS_SECRET_ACCESS_KEY: ${MINIO_ROOT_PASSWORD}
      AWS_DEFAULT_REGION: us-east-1
      # Backend store DSN
      BACKEND_STORE_URI: postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      ARTIFACT_ROOT: s3://${MINIO_BUCKET}
      GUNICORN_CMD_ARGS: "--workers ${MLFLOW_WORKERS} --timeout 300"
    command: >
      sh -c "
      mlflow db upgrade ${BACKEND_STORE_URI} &&
      mlflow server
        --host ${MLFLOW_HOST}
        --port ${MLFLOW_PORT}
        --backend-store-uri ${BACKEND_STORE_URI}
        --artifacts-destination ${ARTIFACT_ROOT}
        --serve-artifacts
      "
    ports:
      - "5000:5000"
    networks: [mlnet]

  # (Opcional) Nginx como reverse proxy com Basic Auth/TLS (ver seção 7)
  # nginx:
  #   image: nginx:1.27-alpine
  #   depends_on:
  #     - mlflow
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
  #     - certs:/etc/nginx/certs:ro
  #     - htpasswd:/etc/nginx/htpasswd:ro
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   networks: [mlnet]

networks:
  mlnet:

volumes:
  pg_data:
  minio_data:
  # certs:
  # htpasswd:
